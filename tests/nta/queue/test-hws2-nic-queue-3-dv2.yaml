pmd@a1:
  agent: testpmd
  cmd: 'dpdk-testpmd -a pci0,dv_flow_en=2 -a pci1,dv_flow_en=2 -- -i --rxq=4 --txq=4'
  setup: ["shell sysctl -w vm.nr_hugepages=4096"]

scapy@b1:
  agent: scapy

pmd0: &pmd0
  command: |
    start
    set verbose 1
  result: Change verbose level from \d{1,} to 1

pmd1: &pmd1
  command: |
    flow create 0 ingress pattern eth / ipv4 / udp src is 101 / end actions queue index 1 / end
    flow create 0 ingress pattern eth / ipv4 / udp src is 102 / end actions queue index 2 / end
    flow create 0 ingress pattern eth / ipv4 / udp src is 103 / end actions queue index 3 / end
  result: (Flow rule \#\d created){3}

phase0: &phase0
  name: CONFIGURATION
  scapy@b1: |
    udp_101 = Ether(src='11:22:33:44:55:66', dst='aa:bb:cc:dd:ee:aa')/IP(src='1.1.1.1', dst='2.2.2.2')
    udp_101 /= UDP(sport=101, dport=5678)/Raw('== TEST ==')
    udp_102 = udp_101.copy()
    udp_103 = udp_101.copy()
    udp_102[UDP].sport = 102
    udp_103[UDP].sport = 103
  pmd@a1: [ *pmd0, *pmd1 ]

phase101: &phase101
  name: SENT and CHECK queue 1
  scapy@b1: sendp(udp_101, iface=pf0)
  result:
    pmd@a1: 'port 0/queue 1: received 1 packets'

phase102: &phase102
  name: SENT and CHECK queue 2
  scapy@b1: sendp(udp_102, iface=pf0)
  result:
    pmd@a1: 'port 0/queue 2: received 1 packets'

phase103: &phase103
  name: SENT and CHECK queue 3
  scapy@b1: sendp(udp_103, iface=pf0)
  result:
    pmd@a1: 'port 0/queue 3: received 1 packets'
# Notice will not fail for 'port 0/queue 2' cause it was seen before, 
# but will fail for 'port 1/queue 2' in above case.

flow:
  -
    phases: [ *phase0 ]
    repeat: 1
  -
    phases: [ *phase101, *phase102, *phase103 ]
    repeat: 1
