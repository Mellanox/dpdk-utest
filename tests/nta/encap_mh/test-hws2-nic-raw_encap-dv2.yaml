pmd@a1:
  agent: testpmd
  cmd: 'dpdk-testpmd -a pci0,dv_flow_en=2 -a pci1,dv_flow_en=2 -- -i --rxq=4 --txq=4'
  setup: ["shell sysctl -w vm.nr_hugepages=4096"]

scapy@b1:
  agent: scapy

pmd0: &pmd0
  command: |
    port stop 0
    port config 0 loopback 1
    port start 0
    start
    set verbose 1
  result: Change verbose level from \d{1,} to 1

pmd1: &pmd1
  command: |
    set raw_encap 1 eth dst is 00:16:3e:17:21:df src is 00:16:3e:4a:5b:e3 type is 33024 has_vlan is 1 / vlan vid is 2541 tci is 63981 has_more_vlan is 0 inner_type is 34525 / ipv6 src is ::b460 dst is ::f9ed proto is 17 tc is 52 flow is 213887 has_frag_ext is 0 hop is 249 hop is 249 / udp src is 38291 dst is 4789 / vxlan vni is 6997841 last_rsvd is 52 / end_set 
    flow create 0 egress pattern eth / end actions jump group 1 / end
    flow create 0 priority 0 group 1 egress pattern eth / end actions  raw_encap index 1 / end
  result: (Flow rule \#\d created){2}

phase0: &phase0
  name: CONFIGURATION
  scapy@b1: |
    udp_101 = Ether(src='11:22:33:44:55:66', dst='aa:bb:cc:dd:ee:aa')/IP(src='1.1.1.1', dst='2.2.2.2')
    udp_101 /= UDP(sport=101, dport=5678)/Raw('== TEST ==')
    sniff=AsyncSniffer(iface=pf0, filter='ether dst 00:16:3e:17:21:df', prn=lambda x: print('CAPTURE A: ' + pf0 + ': '+ x.command()))
  pmd@a1: [ *pmd0, *pmd1 ]

phase101: &phase101
  name: SENT and CHECK queue 1
  scapy@b1: |
    sniff.start()
    time.sleep(1)
    sendp(udp_101, iface=pf1)
    time.sleep(5)
    sniff.stop()
  result:
    pmd@a1: 'port 1/queue 0: received 1 packets'
    scapy@b1: {'and': ['CAPTURE A:', "dst='00:16:3e:17:21:df', src='00:16:3e:4a:5b:e3'"]}

flow:
  -
    phases: [ *phase0 ]
    repeat: 1
  -
    phases: [ *phase101 ]
    repeat: 1
