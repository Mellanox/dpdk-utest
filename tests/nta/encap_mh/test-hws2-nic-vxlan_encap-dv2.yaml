pmd@a1:
  agent: testpmd
  cmd: 'dpdk-testpmd -a pci0,dv_flow_en=2 -a pci1,dv_flow_en=2 -- -i --rxq=4 --txq=4'
  setup: ["shell sysctl -w vm.nr_hugepages=4096"]

scapy@b1:
  agent: scapy

pmd0: &pmd0
  command: |
    port stop 0
    port config 0 loopback 1
    port start 0
    start
    set verbose 1
  result: Change verbose level from \d{1,} to 1

pmd1: &pmd1
  command: |
    set vxlan-with-vlan ip-version ipv4 vni 2017867 udp-src 49639 udp-dst 4789 ip-src 162.3.75.180 ip-dst 228.129.100.27 vlan-tci 1153 eth-src 08:c0:eb:21:03:aa eth-dst 08:c0:eb:21:03:ab
    flow create 0 egress pattern eth / end actions jump group 1 / end
    flow create 0 egress group 1 pattern eth / end actions vxlan_encap / end 
  result: (Flow rule \#\d created){2}

phase0: &phase0
  name: CONFIGURATION
  scapy@b1: |
    udp_101 = Ether(src='11:22:33:44:55:66', dst='aa:bb:cc:dd:ee:aa')/IP(src='1.1.1.1', dst='2.2.2.2')
    udp_101 /= UDP(sport=101, dport=5678)/Raw('== TEST ==')
    sniff=AsyncSniffer(iface=pf0, filter='ip src 162.3.75.180', prn=lambda x: print('CAPTURE A: ' + pf0 + ': '+ x.command()))
  pmd@a1: [ *pmd0, *pmd1 ]

phase101: &phase101
  name: SENT and CHECK queue 1
  scapy@b1: |
    sniff.start()
    time.sleep(1)
    sendp(udp_101, iface=pf1)
    time.sleep(5)
    sniff.stop()
  result:
    pmd@a1: 'port 1/queue 0: received 1 packets'
    scapy@b1: {'and': ['CAPTURE A:', "dst='08:c0:eb:21:03:ab', src='08:c0:eb:21:03:aa'"]}

flow:
  -
    phases: [ *phase0 ]
    repeat: 1
  -
    phases: [ *phase101 ]
    repeat: 1
