pmd@a1:
  agent: testpmd
  cmd: 'dpdk-testpmd -a pci0,dv_flow_en=2 -a pci1,dv_flow_en=2 -- -i --rxq=4 --txq=4'
  setup: ["shell sysctl -w vm.nr_hugepages=4096"]

scapy@b1:
  agent: scapy

pmd0: &pmd0
  command: |
    port stop all
    flow configure 0 queues_number 1 queues_size 64
    port start all
    start
    set verbose 1
  result: Change verbose level from \d{1,} to 1

pmd1: &pmd1
  command: |
    flow pattern_template 0 create ingress pattern_template_id 0 template eth  / end
    flow actions_template 0 create ingress actions_template_id 0 template jump group 1 / end mask jump group 1 / end
    flow template_table 0 create table_id 0 group 0 priority 1 ingress rules_number 64 pattern_template 0 actions_template 0
    flow queue 0 create 0 template_table 0 pattern_template 0 actions_template 0 postpone no pattern eth / end actions jump group 1 / end
    flow pattern_template 0 create ingress pattern_template_id 1 template eth / ipv4 / udp / mpls label mask 100 ttl mask 64 / ipv4 / end
    flow actions_template 0 create ingress actions_template_id 1 template queue / end mask queue / end
    flow template_table 0 create table_id 1 group 1 priority 1 ingress rules_number 64 pattern_template 1 actions_template 1
    flow queue 0 create 0 template_table 1 pattern_template 0 actions_template 0 postpone no pattern eth / ipv4 / udp / mpls label spec 100 ttl spec 64 / ipv4 / end actions queue index 3 / end
    flow pull 0 queue 0
result: '(Queue #0 pulled 2 operations (0 failed, 2 succeeded)){1}'

phase0: &phase0
  name: CONFIGURATION
  scapy@b1: |
    load_contrib("mpls")
    p_ok = Ether()/IP(src="192.168.1.1", dst="192.168.2.1")/UDP(sport=6635, dport=6635)/MPLS(label=100, ttl=64)/IP(src="10.0.0.1", dst="10.0.0.2")/TCP(sport=1234, dport=80)
    p_nok=Ether(src='aa:00:00:00:00:aa', dst='bb:00:00:00:00:bb')/IP(src='1.1.1.1', dst='1.1.1.2')/UDP(sport=10, dport=1001)/Raw('==test==')
  pmd@a1: [ *pmd0, *pmd1 ]

phase101: &phase101
  name: SENT and CHECK queue 1
  scapy@b1:  |
    sendp(p_ok, iface=pf0, count=1, verbose=1)
    sendp(p_nok, iface=pf0, count=1, verbose=1)
  result:
    pmd@a1: '(port 0/queue 3: received 1 packets){1}'



flow:
  -
    phases: [ *phase0 ]
    repeat: 1
  -
    phases: [ *phase101 ]
    repeat: 1
